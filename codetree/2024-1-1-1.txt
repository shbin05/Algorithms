격자 5x5
유물 조각 1-7

1. 탐사 진행
3x3 격자 선택하여 격자 회전시킴 90,180,270
회전 목표
1) 유물 1차 획득 가치 최대화
2) 회전한 각도가 가장 작은 방법 선택
3) 회전 중심 좌표의 열이 가장 작은, 행이 가장 작은 구간 선택

2. 유물 획득
조각들이 3개 이상 연결된 경우 조각이 모여 유물이 되고 사라짐.
유적의 벽면에 1-7까지 숫자가 M개 적혀있고,
조각이 사라지면 유적 벽면에 적혀있는 순서대로 새로운 조각 생겨남.
열 번호가 작은 순으로, 행 번호가 큰 순으로 조각 생겨남.

새로운 유물 조각 생성 이후에도 조각이 3개 이상 연결되면 유물 되고 사라짐.


각 턴마다 획득한 유물의 가치 총합을 출력.
유물 획득 불가 시 탐사 즉시 종료. (아무 값도 출력하지 않음.)

Input
탐사 반복 횟수 K, 유물 조각 개수 M
격자 정보
유적 벽면 정보

rotate(board):
    중심점 좌표 받고 3x3 회전

find(board):
    for board:
        bfs()
    
    return found # 찾은 유적들 좌표 set

main():

    board
    wall = deque() 유적벽면 숫자 저장
    max_found = 0 # 최대 유물 가치
    tmp_board # 임시 저장
    tmp_found # 임시 저장

    for (1,1) ~ (3,3): 
        c_board = deepcopy(board)
        b90 = rotate(c_board,x,y)
        f90 = find(b90)
        if len(f90) > max_found:
            max_found = len(f90)
            tmp_found = f90
            tmp_board = b90
            tmp_angle = 90
        elif len(f90) == max_found and 90 < tmp_angle:
            max_found = len(f90)
            tmp_found = f90
            tmp_board = b90
            tmp_angle = 90

        b180 = rotate(b90,x,y)
        f180 = find(b180)
        if len(f180) > max_found:
            max_found = len(f180)
            tmp_found = f180
            tmp_board = b180
            tmp_angle = 180
        elif len(f180) == max_found and 180 < tmp_angle:
            max_found = len(f180)
            tmp_found = f180
            tmp_board = b180
            tmp_angle = 180
        
        b270 = rotate(b180,x,y)
        f270 = find(b270)
        if len(f270) > max_found:
            max_found = len(f270)
            tmp_found = f270
            tmp_board = b270
            tmp_angle = 270

    유적 미발견시 break

    board = tmp_board
    found = tmp_found
    found sort
    found idx 별로 유적 벽면 숫자 채워 넣기

    while 유적 발견될 동안:
        found = find(board)
        found sort
        found idx 별로 유적 벽면 숫자 채워 넣기