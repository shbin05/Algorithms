빵을 구하고자 하는 m명의 사람
m번 사람은 m분에 편의점으로 이동하기 시작
목표로 하는 편의점이 모두 다르며, n x n 격자 위에서 진행

아래와 같은 방법으로 이동함.
1. 
    본인이 가고싶은 편의점 방향을 향해 최단거리로 1칸씩 이동
    상,좌,우,하 우선 순으로 이동.
2. 
    편의점 도착 시 다른 사람들은 그 편의점 칸을 지나갈 수 없음
    격자에 있는 사람들이 모두 이동한 뒤에 지나갈 수 없어짐.
3.
    현재 시간이 t분이고, t<=m이라면
    본인이 가고 싶은 편의점과 가장 가까운 베이스캠프로 들어감.
    여러 개인 경우 행, 열이 작은 것 우선.
    t번 사람이 베이스 캠프로 이동하는 데에는 시간 소요 x
    다른 사람들은 베이스 캠프가 있는 칸 지나갈 수 없음.
    t번 사람이 편의점을 향해 움직이기 시작했더라도 해당 베이스 캠프는 앞으로 절대 지나갈 수 없음.
    해당 턴 격자에 있는 모든 사람들이 이동한 뒤에 해당 칸을 지나갈 수 없어짐.

모든 사람들이 총 몇 분 후에 편의점에 도착하는지 구하기.

able: n x n size, 칸 이동가능 여부 저장, True로 초기화
able_bl: 이용가능한 베이스라인 위치 저장
stores: 편의점 위치 저장, index M+1개
people: 사람 위치 저장, index M+1개
arrived: 사람 도착 여부 저장, index M+1개, False로 초기화
banned: 이동 불가하게 될 좌표들 저장, 분마다 초기화

N,M 입력받음
board 입력받음
베이스라인 위치 able_bl에 저장
편의점 위치 입력받음

while True:
    t = 1
    banned = []
    if t<=M : # 새로운 사람 출발
        able_bl에서 t번 편의점과 가장 가까운 베이스라인 찾기 -> bx, by
        people[t] 업데이트
        able_bl에서 t번 베이스라인 제외
        banned.append((bx,by))
    for i in range(1, M+1):
        if arrived[i]: continue
        i번 사람 i번 편의점을 향해 1칸 이동:
            able[x][y] = True 확인
            people[i] 업데이트
            i번 편의점 도착 시:
                arrived[i] = True
                banned.append((sx,sy))
    for x,y in banned:
        able[x][y] = False

    if arrived[1:].count(False) == 0 : break
    t+=1
